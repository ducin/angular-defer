import{a as b,b as E,c as w,d as _,e as y,f as M}from"./chunk-5XD2OXE3.js";import{a as v}from"./chunk-SH32YSIN.js";import{a as D}from"./chunk-RURXA3RU.js";import"./chunk-LIVYS4BP.js";import{Ha as r,Pa as m,Sa as c,Ua as s,Va as h,W as a,Wa as p,cb as i,db as n,eb as f,hb as x,mb as e,nb as u,rb as C,sb as g,tb as S}from"./chunk-OJTWMRHI.js";var T=()=>[y,import("./chunk-PEUG7PPS.js").then(t=>t.LazyWhenConditionComponent),import("./chunk-7GWIDXD6.js").then(t=>t.LazySharedComponent),import("./chunk-TJ5IR3FS.js").then(t=>t.StUpIdCaSePipe),import("./chunk-T3KMG43A.js").then(t=>t.HighlightDirective)];function W(t,o){t&1&&(i(0,"lazy-when-condition")(1,"article"),e(2," some "),i(3,"code"),e(4,"@defer (when isVisible)"),n(),e(5," content "),n()(),i(6,"lazy-shared")(7,"article"),e(8," some "),i(9,"code"),e(10,"@defer (when isVisible)"),n(),e(11," content "),n()(),i(12,"non-standalone")(13,"article"),e(14," some "),i(15,"code"),e(16,"@defer (when isVisible)"),n(),e(17," content "),n()(),i(18,"h2"),e(19,"pipe"),n(),e(20),g(21,"StUpIdCaSe"),i(22,"h2"),e(23,"directive"),n(),i(24,"div",3),e(25,"lazy loaded directive - I'm highlighted lol \u{1F979}"),n()),t&2&&(r(20),u(" ",S(21,1,"Lazy loaded pipe here")," "))}function z(t,o){t&1&&f(0,"loader")}function F(t,o){t&1&&(e(0," placeholder is shown before "),i(1,"code"),e(2,"@defer"),n(),e(3," is triggered "))}function L(t,o){t&1&&e(0," something went wrong! ")}var q=(()=>{let o=class o{constructor(){this.isVisible=!1}};o.\u0275fac=function(l){return new(l||o)},o.\u0275cmp=a({type:o,selectors:[["defer-when-condition"]],standalone:!0,features:[C],decls:31,vars:2,consts:[["type","checkbox",3,"ngModel","ngModelChange"],[1e3,100],[500],["highlight",""]],template:function(l,d){l&1&&(i(0,"app-box")(1,"content"),e(2,"\u{1F4DA} if the "),i(3,"code"),e(4,"when"),n(),e(5," condition switches back to "),i(6,"code"),e(7,"false"),n(),e(8,", the defer block is "),i(9,"strong"),e(10,"not reverted back"),n(),e(11," to the placeholder. The swap is a one-time operation. If the content within the block should be conditionally rendered, an "),i(12,"code"),e(13,"if"),n(),e(14," condition can be used within the block itself."),n(),i(15,"content"),e(16,"\u{1F590}\uFE0F toggle the checkbox; when checked, the "),i(17,"code"),e(18,"@defer (when isVisible)"),n(),e(19," condition will switch to true."),n(),i(20,"div")(21,"label")(22,"input",0),x("ngModelChange",function(k){return d.isVisible=k}),n(),i(23,"code"),e(24,"isVisible"),n()()()(),c(25,W,26,3)(26,z,1,0)(27,F,4,0)(28,L,1,0),h(29,25,T,26,27,28,1,2,s)),l&2&&(r(22),m("ngModel",d.isVisible),r(7),p(d.isVisible))},dependencies:[_,b,E,w,M,D,v],encapsulation:2});let t=o;return t})();export{q as DeferWhenConditionComponent};
